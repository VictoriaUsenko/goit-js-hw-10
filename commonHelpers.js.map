{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  datetimePickerEl: document.querySelector('#datetime-picker'),\n  startBtnEl: document.querySelector('[data-start]'),\n  stopBtnEl: document.querySelector('[data-stop]'),\n  dayEl: document.querySelector('[data-days]'),\n  hourEl: document.querySelector('[data-hours]'),\n  minEl: document.querySelector('[data-minutes]'),\n  secEl: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet intervalId = null;\n\nconst updateElementStatus = isTimerActive => {\n  refs.datetimePickerEl.disabled = isTimerActive;\n  refs.startBtnEl.disabled = isTimerActive;\n  refs.stopBtnEl.disabled = !isTimerActive;\n};\n\nconst onStartClick = () => {\n  if (userSelectedDate === null) return;\n\n  const targetDate = userSelectedDate.getTime();\n  intervalId = setInterval(() => updateTimer(targetDate), 1000);\n\n  updateElementStatus(true);\n};\n\nconst onStopClick = () => {\n  clearInterval(intervalId);\n  resetTimerFields();\n  updateElementStatus(false);\n};\n\nconst updateTimer = EndDate => {\n  const timeLeft = EndDate - Date.now();\n\n  if (timeLeft <= 0) {\n    clearInterval(intervalId);\n    resetTimerFields();\n    updateElementStatus(false);\n    iziToast.info({\n      title: 'The timer has ended!',\n      message: 'The selected date has arrived',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n  refs.dayEl.textContent = formatTimeValue(days);\n  refs.hourEl.textContent = formatTimeValue(hours);\n  refs.minEl.textContent = formatTimeValue(minutes);\n  refs.secEl.textContent = formatTimeValue(seconds);\n};\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst formatTimeValue = value => {\n  return value < 10 ? '0' + value : value;\n};\n\nconst resetTimerFields = () => {\n  [refs.dayEl, refs.hourEl, refs.minEl, refs.secEl].forEach(\n    field => (field.textContent = '00')\n  );\n};\n\nrefs.startBtnEl.disabled = true;\n\nflatpickr(refs.datetimePickerEl, {\n  enableTime: true,\n  time_24hr: true,\n  minDate: 'today',\n  defaultDate: Date.now(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.error({\n        title: 'Error!',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.startBtnEl.disabled = true;\n      return;\n    }\n\n    refs.startBtnEl.disabled = false;\n  },\n});\n\nrefs.startBtnEl.addEventListener('click', onStartClick);\n\nrefs.stopBtnEl.addEventListener('click', onStopClick);\n"],"names":["refs","userSelectedDate","intervalId","updateElementStatus","isTimerActive","onStartClick","targetDate","updateTimer","onStopClick","resetTimerFields","EndDate","timeLeft","iziToast","days","hours","minutes","seconds","convertMs","formatTimeValue","ms","value","field","flatpickr","selectedDates"],"mappings":"+IAMA,MAAMA,EAAO,CACX,iBAAkB,SAAS,cAAc,kBAAkB,EAC3D,WAAY,SAAS,cAAc,cAAc,EACjD,UAAW,SAAS,cAAc,aAAa,EAC/C,MAAO,SAAS,cAAc,aAAa,EAC3C,OAAQ,SAAS,cAAc,cAAc,EAC7C,MAAO,SAAS,cAAc,gBAAgB,EAC9C,MAAO,SAAS,cAAc,gBAAgB,CAChD,EAEA,IAAIC,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAsBC,GAAiB,CAC3CJ,EAAK,iBAAiB,SAAWI,EACjCJ,EAAK,WAAW,SAAWI,EAC3BJ,EAAK,UAAU,SAAW,CAACI,CAC7B,EAEMC,EAAe,IAAM,CACzB,GAAIJ,IAAqB,KAAM,OAE/B,MAAMK,EAAaL,EAAiB,UACpCC,EAAa,YAAY,IAAMK,EAAYD,CAAU,EAAG,GAAI,EAE5DH,EAAoB,EAAI,CAC1B,EAEMK,EAAc,IAAM,CACxB,cAAcN,CAAU,EACxBO,IACAN,EAAoB,EAAK,CAC3B,EAEMI,EAAcG,GAAW,CAC7B,MAAMC,EAAWD,EAAU,KAAK,IAAG,EAEnC,GAAIC,GAAY,EAAG,CACjB,cAAcT,CAAU,EACxBO,IACAN,EAAoB,EAAK,EACzBS,EAAS,KAAK,CACZ,MAAO,uBACP,QAAS,gCACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAE5DX,EAAK,MAAM,YAAckB,EAAgBL,CAAI,EAC7Cb,EAAK,OAAO,YAAckB,EAAgBJ,CAAK,EAC/Cd,EAAK,MAAM,YAAckB,EAAgBH,CAAO,EAChDf,EAAK,MAAM,YAAckB,EAAgBF,CAAO,CAClD,EAEMC,EAAYE,GAAM,CAMtB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEME,EAAkBE,GACfA,EAAQ,GAAK,IAAMA,EAAQA,EAG9BX,EAAmB,IAAM,CAC7B,CAACT,EAAK,MAAOA,EAAK,OAAQA,EAAK,MAAOA,EAAK,KAAK,EAAE,QAChDqB,GAAUA,EAAM,YAAc,IAClC,CACA,EAEArB,EAAK,WAAW,SAAW,GAE3BsB,EAAUtB,EAAK,iBAAkB,CAC/B,WAAY,GACZ,UAAW,GACX,QAAS,QACT,YAAa,KAAK,IAAK,EACvB,gBAAiB,EAEjB,QAAQuB,EAAe,CAErB,GADAtB,EAAmBsB,EAAc,CAAC,EAC9BtB,EAAmB,KAAK,MAAO,CACjCW,EAAS,MAAM,CACb,MAAO,SACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDZ,EAAK,WAAW,SAAW,GAC3B,MACD,CAEDA,EAAK,WAAW,SAAW,EAC5B,CACH,CAAC,EAEDA,EAAK,WAAW,iBAAiB,QAASK,CAAY,EAEtDL,EAAK,UAAU,iBAAiB,QAASQ,CAAW"}